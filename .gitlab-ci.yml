variables:
  DOCKER_IMAGE_BACKEND: "mohamed7any/moo"
  DOCKER_IMAGE_FRONTEND: "mohamed7any/moo"
  DOCKER_TAG: "${CI_COMMIT_SHA}"

stages:
stages:
    - notify
    - install
    - lint
    - test
    - build
    - deploy
    - security
    - cleanup


notify:
  stage: notify
  image: curlimages/curl:latest
  script:
    - >
      curl -X POST -H 'Content-type: application/json' 
      --data "{\"text\":\"ðŸ”” Starting *notify* stage for branch *$CI_COMMIT_REF_NAME* in project *$CI_PROJECT_NAME*\"}" 
      https://hooks.slack.com/services/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


install_frontend:
  stage: install
  image: node:20
  script:
    - cd frontend
    - npm install
    - npm run build


lint_backend:
  stage: lint
  image: python:3.11
  script:
    - pip install flake8 black
    - black backend
    - cd backend && flake8 . || true

lint_frontend:
  stage: lint
  image: node:20
  cache:
    paths:
      - frontend/node_modules/
  script:
    - cd frontend
    - npm install
    - npm run lint || true

test_backend:
  stage: test
  image: python:3.11
  script:
    - cd backend
    - pip install -r requirements.txt
    - pytest || true

test_frontend:
  stage: test
  image: node:20
  script:
    - cd frontend
    - npm install
    - npm test || true


build_backend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE_BACKEND:$DOCKER_TAG ./backend

build_frontend:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker build -t $DOCKER_IMAGE_FRONTEND:$DOCKER_TAG ./frontend

build_compose:
  stage: build
  image: docker:24.0.5
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-cli-compose
  script:
    - docker compose -f docker-compose.yml build
    - docker compose -f docker-compose.yml up -d
    - docker compose -f docker-compose.yml ps
    - docker compose -f docker-compose.yml down

deploy:
  stage: deploy
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - echo "$DOCKERHUB_TOKEN" | docker login -u "mohamed7any" --password-stdin
  script:
    - docker build -t $DOCKER_IMAGE_BACKEND:$DOCKER_TAG ./backend
    - docker build -t $DOCKER_IMAGE_FRONTEND:$DOCKER_TAG ./frontend
    - docker push $DOCKER_IMAGE_BACKEND:$DOCKER_TAG
    - docker push $DOCKER_IMAGE_FRONTEND:$DOCKER_TAG

security_backend:
  stage: security
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
    - echo "$DOCKERHUB_TOKEN" | docker login -u mohamed7any --password-stdin
  script:
    - docker pull $DOCKER_IMAGE_BACKEND:$DOCKER_TAG
    - trivy image --exit-code 1 --severity HIGH,CRITICAL $DOCKER_IMAGE_BACKEND:$DOCKER_TAG

security_frontend:
  stage: security
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache curl
    - curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
    - echo "$DOCKERHUB_TOKEN" | docker login -u mohamed7any --password-stdin
  script:
    - docker pull $DOCKER_IMAGE_FRONTEND:$DOCKER_TAG
    - trivy image --exit-code 1 --severity HIGH,CRITICAL $DOCKER_IMAGE_FRONTEND:$DOCKER_TAG

cleanup:
  stage: cleanup
  image: docker:latest
  services:
    - docker:dind
  script:
    - docker system prune -f --volumes
