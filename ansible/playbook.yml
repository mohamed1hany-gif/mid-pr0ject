---
- name: Install Docker and PostgreSQL on Ubuntu
  hosts: webservers
  become: true
  vars:
    app_deploy_dir: /app/microservices_app

  tasks:
    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install prerequisites for Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present

    - name: Install Docker
      apt:
        name: docker-ce
        state: latest

    - name: Add current user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes

    - name: Enable and start Docker service
      systemd:
        name: docker
        enabled: true
        state: started

    - name: Install PostgreSQL
      apt:
        name: postgresql
        state: present

    - name: Ensure PostgreSQL is running
      service:
        name: postgresql
        state: started
        enabled: yes

    - name: Create app directory
      file:
        path: "{{ app_deploy_dir }}"
        state: directory
        mode: '0755'

    - name: Copy Docker Compose file
      copy:
        src: docker-compose.yaml
        dest: "{{ app_deploy_dir }}/docker-compose.yaml"
        mode: '0644'
        force: yes

    - name: Copy backend files
      copy:
        src: backend/
        dest: "{{ app_deploy_dir }}/backend/"
        mode: '0644'
        force: yes

    - name: Copy frontend files
      copy:
        src: frontend/
        dest: "{{ app_deploy_dir }}/frontend/"
        mode: '0644'
        force: yes

    - name: Copy .env file
      copy:
        src: .env
        dest: "{{ app_deploy_dir }}/.env"
        mode: '0644'

    - name: Deploy application with Docker Compose
      shell: docker-compose up -d --build
      args:
        chdir: "{{ app_deploy_dir }}"

